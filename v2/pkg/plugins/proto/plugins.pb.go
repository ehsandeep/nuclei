// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin 0.7.0
// 	protoc               v3.21.12
// source: plugins.proto

package proto

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty is an empty message.
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

// HelperFunctionInfo contains the information about a helper function
// that is registered with the engine.
type HelperFunctionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Items is the list of helper functions that are registered with the engine.
	Items []*HelperFunctionInfoItem `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *HelperFunctionInfo) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *HelperFunctionInfo) GetItems() []*HelperFunctionInfoItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// HelperFunctionInfoItem contains the information about a helper function
type HelperFunctionInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the helper function.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// NumberOfArgs is the number of arguments the helper function takes.
	NumberOfArgs int32 `protobuf:"varint,2,opt,name=NumberOfArgs,proto3" json:"NumberOfArgs,omitempty"`
	// Signatures is the list of signatures the helper function takes.
	Signatures []string `protobuf:"bytes,3,rep,name=Signatures,proto3" json:"Signatures,omitempty"`
}

func (x *HelperFunctionInfoItem) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *HelperFunctionInfoItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelperFunctionInfoItem) GetNumberOfArgs() int32 {
	if x != nil {
		return x.NumberOfArgs
	}
	return 0
}

func (x *HelperFunctionInfoItem) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// HelperFunctionRequest is the request for a helper function.
type HelperFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Args is the list of arguments for the helper function.
	Args []*AnyScalar `protobuf:"bytes,1,rep,name=Args,proto3" json:"Args,omitempty"`
	// Name is the name of the helper function.
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *HelperFunctionRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *HelperFunctionRequest) GetArgs() []*AnyScalar {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *HelperFunctionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// AnyScalar is a scalar value that can be used for passing
// arguments to helper functions.
type AnyScalar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*AnyScalar_StringValue
	//	*AnyScalar_IntValue
	//	*AnyScalar_BoolValue
	//	*AnyScalar_DoubleValue
	Kind isAnyScalar_Kind `protobuf_oneof:"kind"`
}

func (x *AnyScalar) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (m *AnyScalar) GetKind() isAnyScalar_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *AnyScalar) GetStringValue() string {
	if x, ok := x.GetKind().(*AnyScalar_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *AnyScalar) GetIntValue() int64 {
	if x, ok := x.GetKind().(*AnyScalar_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *AnyScalar) GetBoolValue() bool {
	if x, ok := x.GetKind().(*AnyScalar_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *AnyScalar) GetDoubleValue() float64 {
	if x, ok := x.GetKind().(*AnyScalar_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

type isAnyScalar_Kind interface {
	isAnyScalar_Kind()
}

type AnyScalar_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=StringValue,proto3,oneof"`
}

type AnyScalar_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=IntValue,proto3,oneof"`
}

type AnyScalar_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=BoolValue,proto3,oneof"`
}

type AnyScalar_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,4,opt,name=DoubleValue,proto3,oneof"`
}

func (*AnyScalar_StringValue) isAnyScalar_Kind() {}

func (*AnyScalar_IntValue) isAnyScalar_Kind() {}

func (*AnyScalar_BoolValue) isAnyScalar_Kind() {}

func (*AnyScalar_DoubleValue) isAnyScalar_Kind() {}

// HelperFunctionResponse is the response for a helper function.
type HelperFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result is the result of the helper function.
	Result *AnyScalar `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *HelperFunctionResponse) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *HelperFunctionResponse) GetResult() *AnyScalar {
	if x != nil {
		return x.Result
	}
	return nil
}

// HelperFunction is the specification for a plugin that
// registers new helper functions with the engine which
// can then be used from nuclei templates.
//
// go:plugin type=plugin version=1
type HelperFunction interface {
	// Info returns the information about the helper function
	// that are registered with the engine.
	Info(context.Context, *Empty) (*HelperFunctionInfo, error)
	// Executes executes a helper function with the given request
	// and returns the response.
	//
	// The evaluation for the above registered helper function
	// happens using the Execute method of the plugin.
	Execute(context.Context, *HelperFunctionRequest) (*HelperFunctionResponse, error)
}
